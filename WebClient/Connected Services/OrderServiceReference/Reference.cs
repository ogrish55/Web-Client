//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebshopClient.OrderServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCustomerOrder", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceCustomerOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiscountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FinalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOrder {
            get {
                return this.DateOrderField;
            }
            set {
                if ((this.DateOrderField.Equals(value) != true)) {
                    this.DateOrderField = value;
                    this.RaisePropertyChanged("DateOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiscountId {
            get {
                return this.DiscountIdField;
            }
            set {
                if ((this.DiscountIdField.Equals(value) != true)) {
                    this.DiscountIdField = value;
                    this.RaisePropertyChanged("DiscountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FinalPrice {
            get {
                return this.FinalPriceField;
            }
            set {
                if ((this.FinalPriceField.Equals(value) != true)) {
                    this.FinalPriceField = value;
                    this.RaisePropertyChanged("FinalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodField, value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderServiceReference.ICustomerOrderService")]
    public interface ICustomerOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteOrderResponse")]
        void DeleteOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertOrderResponse")]
        void InsertOrder(WebshopClient.OrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertOrderResponse")]
        System.Threading.Tasks.Task InsertOrderAsync(WebshopClient.OrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateOrderResponse")]
        void UpdateOrder(WebshopClient.OrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(WebshopClient.OrderServiceReference.ServiceCustomerOrder order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerOrderServiceChannel : WebshopClient.OrderServiceReference.ICustomerOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerOrderServiceClient : System.ServiceModel.ClientBase<WebshopClient.OrderServiceReference.ICustomerOrderService>, WebshopClient.OrderServiceReference.ICustomerOrderService {
        
        public CustomerOrderServiceClient() {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteOrder(int orderId) {
            base.Channel.DeleteOrder(orderId);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int orderId) {
            return base.Channel.DeleteOrderAsync(orderId);
        }
        
        public void InsertOrder(WebshopClient.OrderServiceReference.ServiceCustomerOrder order) {
            base.Channel.InsertOrder(order);
        }
        
        public System.Threading.Tasks.Task InsertOrderAsync(WebshopClient.OrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.InsertOrderAsync(order);
        }
        
        public void UpdateOrder(WebshopClient.OrderServiceReference.ServiceCustomerOrder order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(WebshopClient.OrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.UpdateOrderAsync(order);
        }
    }
}
