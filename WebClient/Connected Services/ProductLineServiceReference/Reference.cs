//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebshopClient.ProductLineServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProductLine", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceProductLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebshopClient.ProductLineServiceReference.ServiceProduct ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebshopClient.ProductLineServiceReference.ServiceProduct Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineId {
            get {
                return this.ProductLineIdField;
            }
            set {
                if ((this.ProductLineIdField.Equals(value) != true)) {
                    this.ProductLineIdField = value;
                    this.RaisePropertyChanged("ProductLineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProduct", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountOnStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountOnStock {
            get {
                return this.AmountOnStockField;
            }
            set {
                if ((this.AmountOnStockField.Equals(value) != true)) {
                    this.AmountOnStockField = value;
                    this.RaisePropertyChanged("AmountOnStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceReview", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReviewIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewId {
            get {
                return this.ReviewIdField;
            }
            set {
                if ((this.ReviewIdField.Equals(value) != true)) {
                    this.ReviewIdField = value;
                    this.RaisePropertyChanged("ReviewId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductLineServiceReference.IProductLineService")]
    public interface IProductLineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProductLine", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductLineResponse")]
        void DeleteProductLine(int productLineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProductLine", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductLineResponse")]
        System.Threading.Tasks.Task DeleteProductLineAsync(int productLineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProductLine", ReplyAction="http://tempuri.org/IProductLineService/InsertProductLineResponse")]
        void InsertProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProductLine", ReplyAction="http://tempuri.org/IProductLineService/InsertProductLineResponse")]
        System.Threading.Tasks.Task InsertProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProductLine", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductLineResponse")]
        void UpdateProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProductLine", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductLineResponse")]
        System.Threading.Tasks.Task UpdateProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProduct", ReplyAction="http://tempuri.org/IProductLineService/InsertProductResponse")]
        void InsertProduct(WebshopClient.ProductLineServiceReference.ServiceProduct product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProduct", ReplyAction="http://tempuri.org/IProductLineService/InsertProductResponse")]
        System.Threading.Tasks.Task InsertProductAsync(WebshopClient.ProductLineServiceReference.ServiceProduct product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProduct", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductResponse")]
        void DeleteProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProduct", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProduct", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductResponse")]
        void UpdateProduct(WebshopClient.ProductLineServiceReference.ServiceProduct product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProduct", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(WebshopClient.ProductLineServiceReference.ServiceProduct product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetProductById", ReplyAction="http://tempuri.org/IProductLineService/GetProductByIdResponse")]
        WebshopClient.ProductLineServiceReference.ServiceProduct GetProductById(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetProductById", ReplyAction="http://tempuri.org/IProductLineService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceProduct> GetProductByIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetAllProducts", ReplyAction="http://tempuri.org/IProductLineService/GetAllProductsResponse")]
        WebshopClient.ProductLineServiceReference.ServiceProduct[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetAllProducts", ReplyAction="http://tempuri.org/IProductLineService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceProduct[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetAllReviewsByProductId", ReplyAction="http://tempuri.org/IProductLineService/GetAllReviewsByProductIdResponse")]
        WebshopClient.ProductLineServiceReference.ServiceReview[] GetAllReviewsByProductId(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/GetAllReviewsByProductId", ReplyAction="http://tempuri.org/IProductLineService/GetAllReviewsByProductIdResponse")]
        System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceReview[]> GetAllReviewsByProductIdAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertReview", ReplyAction="http://tempuri.org/IProductLineService/InsertReviewResponse")]
        int InsertReview(WebshopClient.ProductLineServiceReference.ServiceReview review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertReview", ReplyAction="http://tempuri.org/IProductLineService/InsertReviewResponse")]
        System.Threading.Tasks.Task<int> InsertReviewAsync(WebshopClient.ProductLineServiceReference.ServiceReview review);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductLineServiceChannel : WebshopClient.ProductLineServiceReference.IProductLineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductLineServiceClient : System.ServiceModel.ClientBase<WebshopClient.ProductLineServiceReference.IProductLineService>, WebshopClient.ProductLineServiceReference.IProductLineService {
        
        public ProductLineServiceClient() {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteProductLine(int productLineId) {
            base.Channel.DeleteProductLine(productLineId);
        }
        
        public System.Threading.Tasks.Task DeleteProductLineAsync(int productLineId) {
            return base.Channel.DeleteProductLineAsync(productLineId);
        }
        
        public void InsertProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            base.Channel.InsertProductLine(serviceProductLine);
        }
        
        public System.Threading.Tasks.Task InsertProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            return base.Channel.InsertProductLineAsync(serviceProductLine);
        }
        
        public void UpdateProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            base.Channel.UpdateProductLine(serviceProductLine);
        }
        
        public System.Threading.Tasks.Task UpdateProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            return base.Channel.UpdateProductLineAsync(serviceProductLine);
        }
        
        public void InsertProduct(WebshopClient.ProductLineServiceReference.ServiceProduct product) {
            base.Channel.InsertProduct(product);
        }
        
        public System.Threading.Tasks.Task InsertProductAsync(WebshopClient.ProductLineServiceReference.ServiceProduct product) {
            return base.Channel.InsertProductAsync(product);
        }
        
        public void DeleteProduct(int productId) {
            base.Channel.DeleteProduct(productId);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int productId) {
            return base.Channel.DeleteProductAsync(productId);
        }
        
        public void UpdateProduct(WebshopClient.ProductLineServiceReference.ServiceProduct product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(WebshopClient.ProductLineServiceReference.ServiceProduct product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public WebshopClient.ProductLineServiceReference.ServiceProduct GetProductById(int productId) {
            return base.Channel.GetProductById(productId);
        }
        
        public System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceProduct> GetProductByIdAsync(int productId) {
            return base.Channel.GetProductByIdAsync(productId);
        }
        
        public WebshopClient.ProductLineServiceReference.ServiceProduct[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceProduct[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public WebshopClient.ProductLineServiceReference.ServiceReview[] GetAllReviewsByProductId(int productId) {
            return base.Channel.GetAllReviewsByProductId(productId);
        }
        
        public System.Threading.Tasks.Task<WebshopClient.ProductLineServiceReference.ServiceReview[]> GetAllReviewsByProductIdAsync(int productId) {
            return base.Channel.GetAllReviewsByProductIdAsync(productId);
        }
        
        public int InsertReview(WebshopClient.ProductLineServiceReference.ServiceReview review) {
            return base.Channel.InsertReview(review);
        }
        
        public System.Threading.Tasks.Task<int> InsertReviewAsync(WebshopClient.ProductLineServiceReference.ServiceReview review) {
            return base.Channel.InsertReviewAsync(review);
        }
    }
}
