//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebshopClient.ProductLineServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProductLine", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceProductLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineId {
            get {
                return this.ProductLineIdField;
            }
            set {
                if ((this.ProductLineIdField.Equals(value) != true)) {
                    this.ProductLineIdField = value;
                    this.RaisePropertyChanged("ProductLineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductLineServiceReference.IProductLineService")]
    public interface IProductLineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProductLine", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductLineResponse")]
        void DeleteProductLine(int productLineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/DeleteProductLine", ReplyAction="http://tempuri.org/IProductLineService/DeleteProductLineResponse")]
        System.Threading.Tasks.Task DeleteProductLineAsync(int productLineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProductLine", ReplyAction="http://tempuri.org/IProductLineService/InsertProductLineResponse")]
        void InsertProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/InsertProductLine", ReplyAction="http://tempuri.org/IProductLineService/InsertProductLineResponse")]
        System.Threading.Tasks.Task InsertProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProductLine", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductLineResponse")]
        void UpdateProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductLineService/UpdateProductLine", ReplyAction="http://tempuri.org/IProductLineService/UpdateProductLineResponse")]
        System.Threading.Tasks.Task UpdateProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductLineServiceChannel : WebshopClient.ProductLineServiceReference.IProductLineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductLineServiceClient : System.ServiceModel.ClientBase<WebshopClient.ProductLineServiceReference.IProductLineService>, WebshopClient.ProductLineServiceReference.IProductLineService {
        
        public ProductLineServiceClient() {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductLineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteProductLine(int productLineId) {
            base.Channel.DeleteProductLine(productLineId);
        }
        
        public System.Threading.Tasks.Task DeleteProductLineAsync(int productLineId) {
            return base.Channel.DeleteProductLineAsync(productLineId);
        }
        
        public void InsertProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            base.Channel.InsertProductLine(serviceProductLine);
        }
        
        public System.Threading.Tasks.Task InsertProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            return base.Channel.InsertProductLineAsync(serviceProductLine);
        }
        
        public void UpdateProductLine(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            base.Channel.UpdateProductLine(serviceProductLine);
        }
        
        public System.Threading.Tasks.Task UpdateProductLineAsync(WebshopClient.ProductLineServiceReference.ServiceProductLine serviceProductLine) {
            return base.Channel.UpdateProductLineAsync(serviceProductLine);
        }
    }
}
